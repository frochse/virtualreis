# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when there is a push to the main branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build api and db and Deploy to IKS

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: 1.0
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: eu-de 
  ICR_NAMESPACE: ${{ secrets.ICR_NAMESPACE }}
  REGISTRY_HOSTNAME: fochse
  IMAGE_NAME: virtualapi
  IKS_CLUSTER: bootcamp-2
  DEPLOYMENT_NAME: virtualapi

  PORT: 5000
  RESOURCE_GROUP: bootcamp

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Download and Install IBM Cloud CLI
    - name: Install IBM Cloud CLI
      run: |
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version
        ibmcloud config --check-version=false
        ibmcloud plugin install -f kubernetes-service
        ibmcloud plugin install -f container-registry

    # Authenticate with IBM Cloud CLI
    - name: Authenticate with IBM Cloud CLI
      run: |
        ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g "${RESOURCE_GROUP}"
  
      # Authenticate with docker hub

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      

    # Build the Docker image
    - name: Build with Docker
      run: |
        docker build ./flaskapp --file ./flaskapp/Dockerfile -t "$REGISTRY_HOSTNAME"/"$IMAGE_NAME":"$GITHUB_SHA" 

    # Push the image to IBM Container Registry
    - name: Push the image to ICR
      run: |
        docker push $REGISTRY_HOSTNAME/$IMAGE_NAME:$GITHUB_SHA

    # Deploy the Docker image to the IKS cluster
    - name: Deploy to IKS
      run: |
        ibmcloud ks cluster ls
        ibmcloud ks cluster config --cluster "${IKS_CLUSTER}"
        kubectl config current-context
        kubectl apply -f ./k8/configmap.yaml
        kubectl apply -f ./k8/db-deployment.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl apply -f ./k8/db-service.yaml
        
        kubectl apply -f ./k8/flaskapp-deployment.yaml
        kubectl apply -f ./k8/flaskapp-service.yaml

        kubectl get services -o wide
